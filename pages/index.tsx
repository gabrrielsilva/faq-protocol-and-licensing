import { GetServerSideProps } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import { Footer } from '../components/Footer';
import { Header } from '../components/Header';

type Questions = {
  id: number;
  autarquias: string[];
  motivoAutarquiaSemProtocolo: string;
  statusAutarquia: string;
  contatoAutarquia: string;
  ultimaInteracaoEPrazoResposta: string;
  desenvolverContato: string;
  proximosPassosEPrazo: string;
  vigencia: string;
};

export default function Home({ projects }: { projects: number[] }) {
  const [questions, setQuestions] = useState<Questions | null>(null);

  async function getQuestions(id: number) {
    const response = await fetch(`/api/project-questions?id=${id}`);
    const data = (await response.json()) as { questions: Questions };
    setQuestions(data['questions']);
  }

  return (
    <div>
      <Head>
        <title>Infinitel: Projetos Telecom</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='flex flex-col w-screen max-w-full h-full min-h-screen bg-[#18181b]'>
        <Header />
        <div className='flex flex-auto pb-8 -mt-24'>
          <div className='w-full max-w-3xl px-4 mx-auto sm:px-6 lg:max-w-7xl lg:px-8'>
            <div className='grid items-start h-full grid-cols-1 gap-4 lg:grid-cols-3 lg:gap-8'>
              {/* Left column */}
              <div className='grid h-full grid-cols-1 gap-4 lg:col-span-2'>
                <section className='p-10 overflow-hidden border rounded-lg shadow border-white/20 bg-white/20 backdrop-blur-md'>
                  <h1 className='mb-5 text-3xl font-bold text-white'>Projeto {questions?.id}</h1>
                  <ul className='flex flex-col gap-5 text-xl text-gray-400'>
                    <li>Quais säo as autarquias envolvidas? <p className='font-bold text-white'>{questions?.autarquias}</p></li>
                    <li>Qual o motivo da autarquia não protocolada? <p className='font-bold text-white'>{questions?.motivoAutarquiaSemProtocolo}</p></li>
                    <li>Qual o status do projeto na autarquia? <p className='font-bold text-white'>{questions?.statusAutarquia}</p></li>
                    <li>Qual o contato da autarquia? <p className='font-bold text-white'>{questions?.contatoAutarquia}</p></li>
                    <li>Qual a última interação com a autarquia? e qual o prazo para resposta? <p className='font-bold text-white'>{questions?.ultimaInteracaoEPrazoResposta}</p></li>
                    <li>É possível desenvolver alguem contato com a autarquia? <p className='font-bold text-white'>{questions?.desenvolverContato}</p></li>
                    <li>Quais os próximos passos do processo? <p className='font-bold text-white'>{questions?.proximosPassosEPrazo}</p></li>
                    <li>Qual a vigência? <p className='font-bold text-white'>{questions?.vigencia}</p></li>
                  </ul>
                </section>
              </div>

              {/* Right column */}
              <div className='grid h-full grid-cols-1 gap-4'>
                <section className='p-10 overflow-hidden border rounded-lg shadow bg-white/20 border-white/20 backdrop-blur-md'>
                  <h1 className='mb-5 text-3xl font-bold text-white'>Projetos</h1>
                  <ul className='grid gap-3'>
                    {projects.map((id) => (
                      <li
                        className='w-max text-lg font-bold text-white cursor-pointer sm:inline-block after:block after:w-0 after:h-[2px] after:bg-white after:transition-[width] after:duration-300 hover:after:w-full'
                        onClick={() => getQuestions(id)}
                        key={id}
                      >
                        ID {id}
                      </li>
                    ))}
                  </ul>
                </section>
              </div>
            </div>
          </div>
        </div>
        <Footer />
      </main>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/projects`);
  const data = await response.json();
  const projects = data.projects.map((i: { id: number }) => i.id) as number[];

  return {
    props: {
      projects,
    },
  };
};
