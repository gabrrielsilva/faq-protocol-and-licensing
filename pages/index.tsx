import { GetServerSideProps } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import { Footer } from '../components/Footer';
import { Header } from '../components/Header';

type Projeto = {
  id: number;
  autarquias: Autarquia[];
};

type Autarquia = {
  nome: string;
  motivoAutarquiaSemProtocolo: string;
  statusAutarquia: string;
  contatoAutarquia: string;
  ultimaInteracaoEPrazoResposta: string;
  desenvolverContato: string;
  proximosPassosEPrazo: string;
  vigencia: string;
}

export default function Home({ projetos }: { projetos: Projeto[] }) {
  const [autarquia, setAutarquia] = useState<Autarquia | null>(null);
  const [selected, setSelected] = useState<number | null>(null);

  async function getAutarquia(id: number, nome: string) {
    try {
      setSelected(id);
      const response = await fetch(`/api/project-questions?id=${id}&nome=${nome}`);
      const data = (await response.json()) as { autarquia: Autarquia };
      setAutarquia(data.autarquia);
    } catch {
      setAutarquia(null);
    }
  }

  return (
    <div>
      <Head>
        <title>Infinitel: Projetos Telecom</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='flex flex-col w-screen max-w-full h-full min-h-screen bg-[#18181b]'>
        <Header />
        <div className='flex flex-auto pb-8 -mt-24'>
          <div className='w-full max-w-3xl px-4 mx-auto sm:px-6 lg:max-w-7xl lg:px-8'>
            <div className='grid items-start h-full grid-cols-1 gap-4 lg:grid-cols-3 lg:gap-8'>
              {/* Left column */}
              <div className='grid h-full grid-cols-1 gap-4 lg:col-span-2'>
                <section className='p-10 overflow-hidden bg-white border rounded-lg shadow border-white/20 backdrop-blur-md'>
                  <h1 className='text-3xl font-bold text-black'>Projeto {selected}</h1>
                  <hr className='my-3 border-black' />
                  <ul className='flex flex-col gap-5 text-xl text-gray-900'>
                    <li>Quais säo as autarquias envolvidas? <p className='font-bold text-black'>{autarquia?.nome}</p></li>
                    <li>Qual o motivo da autarquia não protocolada? <p className='font-bold text-black'>{autarquia?.motivoAutarquiaSemProtocolo}</p></li>
                    <li>Qual o status do projeto na autarquia? <p className='font-bold text-black'>{autarquia?.statusAutarquia}</p></li>
                    <li>Qual o contato da autarquia? <p className='font-bold text-black'>{autarquia?.contatoAutarquia}</p></li>
                    <li>Qual a última interação com a autarquia? e qual o prazo para resposta? <p className='font-bold text-black'>{autarquia?.ultimaInteracaoEPrazoResposta}</p></li>
                    <li>É possível desenvolver alguem contato com a autarquia? <p className='font-bold text-black'>{autarquia?.desenvolverContato}</p></li>
                    <li>Quais os próximos passos do processo? <p className='font-bold text-black'>{autarquia?.proximosPassosEPrazo}</p></li>
                    <li>Qual a vigência? <p className='font-bold text-black'>{autarquia?.vigencia}</p></li>
                  </ul>
                </section>
              </div>

              {/* Right column */}
              <div className='grid h-full grid-cols-1 gap-4'>
                <section className='p-10 overflow-hidden bg-white border rounded-lg shadow border-white/20 backdrop-blur-md'>
                  <h1 className='text-3xl font-bold text-black'>Projetos</h1>
                  <hr className='my-3 border-black' />
                  <ul className='grid gap-3'>
                    {projetos?.map((projeto, i) => (
                      <li
                        className='text-lg font-bold text-black'
                        key={projeto.id}
                      >
                        ID {projeto.id} - {projeto.autarquias.map(autarquia => {
                          return <button className='mr-2 w-max cursor-pointer sm:inline-block after:block after:w-0 after:h-[2px] after:bg-black after:transition-[width] after:duration-300 hover:after:w-full' key={autarquia.nome} onClick={() => getAutarquia(projeto.id, autarquia.nome)}>{autarquia.nome}</button>
                        })}
                      </li>
                    ))}
                  </ul>
                </section>
              </div>
            </div>
          </div>
        </div>
        <Footer />
      </main>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/projects`);
  const data = await response.json() as { projects: Projeto[] };
  const projetos = data['projects'].map((projeto) => projeto);

  return {
    props: {
      projetos,
    },
  };
};
